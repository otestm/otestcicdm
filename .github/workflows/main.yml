# This is a basic workflow to help you get started with Actions

name: Test Monorepo CICD with Actions

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: kunal-win10

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checks-out your repository 
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changed files using defaults
        id: changed-files
        uses: tj-actions/changed-files@v1.0.2

      - name: Get changed files using a comma separator
        id: changed-files-comma
        uses: tj-actions/changed-files@v1.0.2
        with:
          separator: ","
          
      - name: check if proj updated
        if: "!startsWith(steps.changed-files.outputs.modified_files, 'cicd')"
        run: |
          exit 1
          
      # Runs a single command using the runners shell
      #- name: Set up JDK 1.8
      #  uses: actions/setup-java@v1
      #  with:
      #    java-version: 1.8

      # Runs a set of commands using the runners shell
      - name: Run Maven for cicd1
        if: startsWith(steps.changed-files.outputs.modified_files, 'cicd1/')
        run: |
          cd cicd1
          echo "building 1cicd1"
          mvn -B package --file pom.xml
        
            
      - name: Run Maven for cicd 2
        if: startsWith(steps.changed-files.outputs.modified_files, 'cicd2/')
        run: |
          cd cicd2
          echo "building 2cicd2"
          mvn -B package --file pom.xml
          
      #Step 4
      - name: some other commands
        run: ls -a
        
      - name: additional commands cicd1
        if: startsWith(steps.changed-files.outputs.modified_files, 'cicd1/')
        run: |
          cd cicd1/target
          ls -a
        
      - name: additional commands cicd2
        if: startsWith(steps.changed-files.outputs.modified_files, 'cicd1/')
        run: |
          cd cicd2/target
          ls -a        
